#!/usr/bin/python3

# sessiond - standalone X session manager
# Copyright (C) 2020 James Reed
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <https://www.gnu.org/licenses/>.

import sys
from argparse import ArgumentParser
from subprocess import run

from dbus.exceptions import DBusException
from sessiond import Session


if __name__ == '__main__':
    p = ArgumentParser(description='With no command, list running inhibitors.')
    p.add_argument('command', nargs='?', help='Command to run')
    p.add_argument('-w', '--who', default='', help='Set who is inhibiting')
    p.add_argument('-y', '--why', default='',
                   help='Set why this inhibitor is running')
    p.add_argument('-s', '--stop', action='store_true',
                   help='Stop running inhibitors')

    args = p.parse_args()
    s = Session()

    if args.stop:
        n = s.stop_inhibitors()
        if n == 0:
            sys.exit(1)
    elif args.command:
        id = s.inhibit(args.who, args.why)
        def try_uninhibit():
            try:
                s.uninhibit(id)
            except DBusException:
                pass
        try:
            run(args.command, shell=True)
        except KeyboardInterrupt:
            try_uninhibit()
            sys.exit(130)
        try_uninhibit()
    else:
        i = s.list_inhibitors()
        if len(i) == 0:
            sys.stderr.write('No inhibitors\n')
            sys.exit(1)
        for t in i:
            print('who={} why={}'.format(*t))
